---
- name: foo
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    install_tmux: true
    tmux_tmp_dir: "{{ ansible_env.HOME }}/tmux_tmp"
    tmux_version: 2.5
    libevent_version: 2.1.8
    ncurses_version: 6.0
    pkgs:
      - url: "https://github.com/libevent/libevent/releases/download/release-{{ libevent_version }}-stable/libevent-{{ libevent_version }}-stable.tar.gz"
        archive: "libevent-{{ libevent_version }}.tar.gz"
        name: "libevent-{{ libevent_version }}-stable"
        commands:
          - ./configure --prefix=$HOME/local --disable-shared
          - make
          - make install
      - url: "ftp://ftp.gnu.org/gnu/ncurses/ncurses-{{ ncurses_version }}.tar.gz"
        archive: "ncurses-{{ ncurses_version }}.tar.gz"
        name: "ncurses-{{ ncurses_version }}"
        commands:
          - ./configure --prefix=$HOME/local
          - make
          - make install
      - url: "https://github.com/tmux/tmux/releases/download/{{ tmux_version }}/tmux-{{ tmux_version }}.tar.gz"
        archive: "tmux-{{ tmux_version }}.tar.gz"
        name: "tmux-{{ tmux_version }}"
        commands:
          - ./configure CFLAGS="-I$HOME/local/include -I$HOME/local/include/ncurses" LDFLAGS="-L$HOME/local/lib -L$HOME/local/include/ncurses -L$HOME/local/include"
          - CPPFLAGS="-I$HOME/local/include -I$HOME/local/include/ncurses" LDFLAGS="-static -L$HOME/local/include -L$HOME/local/include/ncurses -L$HOME/local/lib" make
    install_zsh: true

  pre_tasks:
    - name: Check if python2 is available
      raw: python2 --version
      args:
        executable: /bin/bash
      register: python2_available
      failed_when: false
      changed_when: false

    - name: Use python3 as the ansible interpreter if python2 is unavailable
      set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: "'not installed' in python2_available.stdout or 'not found in python2_available.stdout'"

    - name: Gather facts
      setup:
        filter: ansible_*

  tasks:
    - block:
      - name: Create a temporary directory
        file:
          path: "{{ tmux_tmp_dir }}"
          state: directory

      - name: Download packages
        get_url:
          url: "{{ pkg.url }}"
          dest: "{{ tmux_tmp_dir }}/{{ pkg.archive }}"
        with_items: "{{ pkgs }}"
        loop_control:
          loop_var: pkg

      - name: Unarchive packages
        unarchive:
          src: "{{ tmux_tmp_dir }}/{{ pkg.archive }}"
          dest: "{{ tmux_tmp_dir }}"
          remote_src: yes
        with_items: "{{ pkgs }}"
        loop_control:
          loop_var: pkg

      - name: Compile tmux
        command: "{{ pkg.commands }}"
        args:
          chdir: "{{ tmux_tmp_dir }}/{{ pkg.name }}"
        with_items: "{{ pkgs }}"
        loop_control:
          loop_var: pkg
        environment: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"/usr/local/lib"

      when: install_tmux

    - name: Clone
      git:
        repo: https://github.com/hoaile1/dotfiles.git
        dest: "{{ ansible_user_dir }}/dotfiles"
        accept_hostkey: true

    - name: Symlink
      file:
        src: "{{ ansible_user_dir }}/dotfiles/{{ item }}"
        dest: "{{ ansible_user_dir }}/{{ item }}"
        state: link
      with_items:
        - .gitconfig
        - .git-prompt-colors.sh
        - .tmux.conf
        - .vimrc
        - bin/tmux-status-right
